{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": ["config:recommended", "customManagers:dockerfileVersions"],
  "enabledManagers": ["dockerfile", "gomod", "regex", "git-submodules"],
  "ignorePaths": [
    "**/testdata/**",
    "**/examples/**",
    "test/**",
    "testing/**"
  ],
  "gitIgnoredAuthors": ["alaudabot"],
  "packageRules": [
    {
      "matchDatasources": ["github-releases"],
      "matchPackageNames": [
        "AlaudaDevops/tektoncd-cli",
        "AlaudaDevops/trivy",
        "AlaudaDevops/harbor-scanner-trivy",
        "AlaudaDevops/git-clone",
        "AlaudaDevops/syft",
        "AlaudaDevops/cosign",
        "AlaudaDevops/yq",
        "AlaudaDevops/golangci-lint",
        "AlaudaDevops/kubernetes"
      ],
      "versioning": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-alauda-(?<build>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "build-harbor.alauda.cn/ops/photon",
        "build-harbor.alauda.cn/ops/debian",
        "build-harbor.alauda.cn/ops/distroless-static",
        "build-harbor.alauda.cn/ops/ubi*",
        "build-harbor.alauda.cn/ops/alpine",
        "build-harbor.alauda.cn/ops/centos",
        "build-harbor.alauda.cn/ops/ubuntu"
      ],
       "versioning": "regex:^v?(?<major>\\d+)(?:\\.(?<minor>\\d+))?(?:\\.(?<patch>\\d+))?-alauda-(?<build>\\d+)$"
    },
    {
      "matchPackageNames": ["*"],
      "enabled": false,
      "automerge": false
    },
    {
      "matchDatasources":["maven", "docker", "github-releases", "go", "golang-version"],
      "enabled": true
    },
    {
      "matchUpdateTypes": ["major", "minor"],
      "enabled": false,
      "automerge": false
    },
    {
      "matchUpdateTypes": ["patch"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchDatasources":["docker"],
      "matchUpdateTypes": ["minor", "patch", "pin", "pinDigest", "digest"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchDatasources":["github-releases"],
      "matchUpdateTypes": ["minor"],
      "enabled": true,
      "automerge": false
    },
    {
      "matchDatasources":["go"],
      "matchPackageNames": [
        "golang.org/x/**",
        "go"
      ],
      "matchUpdateTypes": ["minor"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchDatasources":["go"],
      "matchUpdateTypes": ["digest"],
      "enabled": false
    },
    {
      "matchBaseBranches": ["release-*", "alauda-*"],
      "extends":["security:only-security-updates"],
      "automerge": true
    },
    {
      "matchDatasources":["docker"],
      "enabled": true
    },
    {
      "matchDatasources":["docker"],
      "matchUpdateTypes": ["minor", "major"],
      "enabled": false
    },
    {
      "matchDatasources":["docker"],
      "matchUpdateTypes": ["patch", "pin", "pinDigest", "digest"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchManagers": ["git-submodules"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchDatasources":["github-releases"],
      "enabled": true
    },
    {
      "matchDatasources":["github-releases"],
      "matchUpdateTypes": ["patch"],
      "enabled": true,
      "automerge": true
    },
    {
      "matchDatasources":["github-releases"],
      "matchUpdateTypes": ["minor", "major"],
      "enabled": false
    },
    {
      "matchDatasources":["golang-version"],
      "rangeStrategy": "bump",
      "enabled": true
    },
    {
      "matchDatasources":["golang-version"],
      "matchUpdateTypes": ["minor", "patch"],
      "enabled": true,
      "automerge": true
    },
    {
      "groupName": "all patch dependencies",
      "groupSlug": "patch-upgrades",
      "matchPackageNames": ["*"],
      "matchUpdateTypes": [
        "patch"
      ]
    },
    {
      "matchDatasources":["go"],
      "matchPackageNames": [
        "golang.org/x/**",
        "go"
      ],
      "groupName": "golang official packages",
      "groupSlug": "go-official-packages"
    },
    {
      "matchPackageNames": [
        "k8s.io/**",
        "sigs.k8s.io/**",
        "github.com/kubernetes/**",
        "kubernetes/**"
      ],
      "groupName": "kubernetes"
    }
  ],
  "dependencyDashboardOSVVulnerabilitySummary": "all",
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "osvVulnerabilityAlerts": true,
  "labels": ["dependencies"],
  "git-submodules": {
    "enabled": true
  },
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/^\\.(tekton|builds?)\\/.*\\.ya?ml$/",
        "/^config\\/.*\\.ya?ml$/"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-zA-Z0-9-._]+?) depName=(?<depName>[^\\s]+?)(?:\\s+(?:lookupName|packageName)=(?<packageName>[^\\s]+?))?(?:\\s+versioning=(?<versioning>[^\\s]+?))?(?:\\s+extractVersion=(?<extractVersion>[^\\s]+?))?(?:\\s+registryUrl=(?<registryUrl>[^\\s]+?))?\\s*\\n.*[:=]\\s*[\"']?(?<currentValue>[0-9a-zA-Z._-]+)[\"']?"
      ],
      "description": "Update images in Tekton pipelines and build scripts. For `build` and `tekton` files, add `# renovate: datasource=docker` comment above each image entry."
    },
    {
      "customType": "regex",
      "datasourceTemplate": "docker",
      "managerFilePatterns": [
        "/(^|/)\\.ko\\.ya?ml$/",
        "/(^|/)ko\\.ya?ml$/"
      ],
      "matchStrings": [
        "defaultBaseImage\\s*:\\s*(?<depName>[^:\\s]+?)(?::(?<currentValue>[^\\s]+?))?\\s*$",
        "# renovate: datasource=docker\\s+[^\\s:]+\\s*:\\s*(?<depName>[^:\\s]+?)(?::(?<currentValue>[^\\s]+?))?\\s*$"
      ],
      "description": "Update `defaultBaseImage` and images in `baseImageOverrides` in ko configuration files. For `baseImageOverrides`, add `# renovate: datasource=docker` comment above each image entry."
    }
  ]
}
